RPC：Remote Produce Call远程过程调用，类似的还有RMI（Remote Methods Invoke 远程方法调用，
是JAVA中的概念，是JAVA十三大技术之一）。自定义数据格式，
基于原生TCP通信，速度快，效率高。早期的webservice，现在热门的dubbo，都是RPC的典型

RPC的框架：webservie(cxf)、dubbo
RMI的框架：hessian


Http：http其实是一种网络传输协议，基于TCP，规定了数据传输的格式。
现在客户端浏览器与服务端通信基本都是采用Http协议。也可以用来进行远程服务调用。缺点是消息封装臃肿。


RPC并没有规定数据传输格式，这个格式可以任意指定，不同的RPC协议，数据格式不一定相同。
Http中还定义了资源定位的路径，RPC中并不需要
最重要的一点：RPC需要满足像调用本地服务一样调用远程服务，也就是对调用过程在API层面进行封装。Http协议没有这样的要求，因此请求、响应等细节需要我们自己去实现。
优点：RPC方式更加透明，对用户更方便。Http方式更灵活，没有规定API和语言，跨语言、跨平台
缺点：RPC方式需要在API层面进行封装，限制了开发的语言环境。